* Gonsie's homedir settings files
  These files are organized by type. Using the =synch.sh= script, local changes can be pulled.
  Private info is stored in the =~/.extra= file on each local machine. Sorce'd by bash.

** Setup
   All config files are located in ~/.config/ directory and are grouped into sub-directories by type.
   From here, all dot file expected in different locations by the operating system are sym-linked.
   These are listed in the =links= file of each directory.

** Installation
   Get the git repo, then update homedir
   : git clone git@github.com:gonsie/dotfiles.git
   : cd dotfiles
   : ./synch.sh

   Or install without git (does this still work??)
   : cd; curl -#L https://github.com/gonsie/dotfiles/tarball/master | tar -xzv --strip-components 1 --exclude={README,synch.sh}

** Inspiration stolen from

*** Other dotfile repositories
   - https://github.com/mathiasbynens/dotfiles
   - https://github.com/necolas/dotfiles

*** Emacs addons
    - https://github.com/tlh/workgroups.el
    - http://autopair.googlecode.com

** =.extra= file example

: source ~/.config/bash/bashmarks.sh

** =.extra.fish= file example

: # local homebrew settings
: set -x PATH /Users/elsa/homebrew/bin $PATH
:
: # if vf is installed
: #eval (python3 -m virtualfish)
:
: # local git settings
: GIT_AUTHOR_NAME="Elsa"
: GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
: git config --global user.name "$GIT_AUTHOR_NAME"
: GIT_AUTHOR_EMAIL="elsa@example.com"
: GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
: git config --global user.email "$GIT_AUTHOR_EMAIL"

** Setting up a new machine

There are two kinds of new machines:

- Brand-new front end systems
- SSH-accessable servers

New front end systems require additional applicaitons and manual preference configuration.
See the NewSystem.md file for more details.


* ~snych.sh~

My synch.sh script copies all the files from the git repo to a ~/.config directory. It then creates symlinks to the top level home directly for files that are expected to be there. 

For emacs in particular, the synch.sh should:
- Copy everything in dotfiles/emacs to ~/.config/emacs
- create a symlink from ~/.emacs pointing to ~/.config/emacs/.emacs
((In my .emacs file I then call other .el files, all of which are expected to be under ~/.config/emacs))

The synch script has different behavior if the ~/.config directly does not exist (it assume that this is a new system and just does a clean copy. (and maybe try to download some things?)) 
If ~/.config does exist, it will run diffs between what is in ~/.config and in the local directory (assuming it’s a checkout of the git repo). 

I keep my dotfiles repo and and the ~/.config directory separate to allow for system-local configurations. I keep the structure of these two directories the same so that diffs between local configs and the git repo can be easily done by the synch script.  

I have further refactored my emacs config into a hierarchy of files, which I somewhat describe here: http://www.gonsie.com/blorg/emacs-v22.html


Please let me know if you have any further questions or if I haven’t explained things very well. I am very excited that you’ve found my configs useful!!